FM解调方案：

一、问题：
1、sdr如何接收调频波，如何配置sdr的中心频率、增益,接收到的数据类型是什么。
2、pc如何读取buffer，一个一个读取还是读取一列；q.get()一次接收。
3、画图像如何实现。
4、降采样设置；播放音频的速率，即降采样后的采样频率。
5、多线程

二、ＦＭ解调原理：
方法一：
1、降采样
  用scipy.signal.decimate实现，降低倍数与滤波器设置；降到声卡的采样率范围。
2、求角度并做差
  用numpy.angle求复数的角度，再用numpy.diff做差分，用numpy.unwrap来把角度限制在0-2*pi。
而且抽取与求差分的先后顺序问题。
方法二：
3、输出给声卡播放
  用Pyaudio库，将数据转换为音频格式，用numpy.dtype('<i2').tostring()

三、程序流程：

	打开/接收音频
		|
		|
	读取/设置各种参数，并把数据格式由字符转为short
		|
		|
	调制信号：先积分，再设置调制度，载波频率，把信号放到载波上
		|
		|
	发送到buffer里
		|
		|
	从buffer里读取数据
		|
		|
	进行解调：求反正切，做差分，降采样
		|
		|
	画数据时域和频域的图像
		|
		|
	用数据流播放音频


问题：
1、用decimate播放会较慢，而直接抽取效果更好。
2、加了代码后，播放中的断点仍没有解决，还有一个固定杂音。
3、多线程问题。
4、发送和接收端加滤波器，否则噪声严重。
5、播放不停止，最后一包反复播放。

#"nearest","zero"为阶梯插值  
#slinear 线性插值  
#"quadratic","cubic" 为2阶、3阶B样条曲线插值
ＦＭ3:最基本版本；
ＦＭ4:有上采样和下采样；
ＦＭ5:多线程；
ＦＭ6:断点问题；
ＦＭ7:另一种解调方案；
ＦＭ8/final:完整版
fm_rx, fm_tx, fm_top：最终上板子版本
